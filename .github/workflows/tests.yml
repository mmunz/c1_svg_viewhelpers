name: tests

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-22.04
    name: Linting
    steps:
      - uses: actions/checkout@v3
      - name: Set up PHP Version
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          coverage: none
          tools: composer:v2
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache
          key: dependencies-composer-${{ runner.os }}-${{ hashFiles('composer.json') }}
      - name: Add GITHUB_TOKEN if available
        run: if [ -n "${{secrets.GITHUB_TOKEN}}" ]; then composer config github-oauth.github.com ${{secrets.GITHUB_TOKEN}}; fi;
      - name: Install composer dependencies
        run: |
          rm -f composer.lock
          composer install
      - name: phpstan
        run: composer phpstan
      - name: PHPCS
        run: composer php:lint
      - name: Typoscript Linter
        run: composer ts:lint

  tests:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        env:
          - { php: "7.4", TYPO3_VERSION: 11 }
          - { php: "8.0", TYPO3_VERSION: 11 }
          - { php: "8.1", TYPO3_VERSION: 11 }
          - { php: "8.2", TYPO3_VERSION: 11 }
          - { php: "8.1", TYPO3_VERSION: 12 }
          - { php: "8.2", TYPO3_VERSION: 12 }
    name: Tests on PHP${{ matrix.env.php }} / TYPO3 ${{ matrix.env.TYPO3_VERSION }}
    steps:
      - uses: actions/checkout@v3
      - name: Add GITHUB_TOKEN if available
        run: if [ -n "${{secrets.GITHUB_TOKEN}}" ]; then composer config github-oauth.github.com ${{secrets.GITHUB_TOKEN}}; fi;
      - name: Install testing system
        run: Build/Scripts/runTests.sh -p ${{ matrix.env.php }} -t ${{ matrix.env.TYPO3_VERSION }} -s composerUpdate
      - name: Functional Tests with sqlite
        run: Build/Scripts/runTests.sh -p ${{ matrix.env.php }} -t ${{ matrix.env.TYPO3_VERSION }} -d sqlite -s functional
